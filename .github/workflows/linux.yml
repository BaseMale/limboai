name: üêß Linux Builds
on:
  workflow_call:

  workflow_dispatch:


# Global Settings
env:
  GODOT_TREEISH: 4.1.1-stable
  LIMBOAI_TREEISH: v0.4.1-stable
  VERSION_STRING: 4.1.1-limboai+v0.4.1

  SCONS_CACHE_LIMIT: 4096
  SCONSFLAGS: verbose=yes warnings=extra werror=yes module_text_server_fb_enabled=yes
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  linux:
    runs-on: "ubuntu-20.04"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor
            target: editor
            production: yes
            build-mono: false
            bin: godot.linuxbsd.editor.x86_64

          - name: Template release
            target: template_release
            production: yes
            build-mono: false
            bin: godot.linuxbsd.template_release.x86_64

          - name: Template debug
            target: template_debug
            production: yes
            build-mono: false
            bin: godot.linuxbsd.template_debug.x86_64

          - name: Editor w/ Mono
            target: editor
            production: yes
            build-mono: true
            bin: godot.linuxbsd.editor.x86_64.mono

          - name: Template release w/ Mono
            target: template_release
            production: yes
            build-mono: true
            bin: godot.linuxbsd.template_release.x86_64.mono

          - name: Template debug w/ Mono
            target: template_debug
            production: yes
            build-mono: true
            bin: godot.linuxbsd.template_debug.x86_64.mono


    steps:
      # Clone godot
      - uses: actions/checkout@v3
        with:
          repository: godotengine/godot
          ref: ${{ env.GODOT_TREEISH }}

      # Clone limboai module
      - uses: actions/checkout@v3
        with:
          path: modules/limboai
          ref: ${{ env.LIMBOAI_TREEISH }}

      # Setup buildroot
      - name: Setup buildroot
        run: |
          wget https://download.tuxfamily.org/godotengine/toolchains/linux/x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          tar -xjf x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          cd x86_64-godot-linux-gnu_sdk-buildroot
          sed -i x86_64-godot-linux-gnu/sysroot/usr/lib/pkgconfig/dbus-1.pc -e "s@/lib@/lib64@g"
          ./relocate-sdk.sh
          cd ..

      # Build step
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          PATH=${GITHUB_WORKSPACE}/x86_64-godot-linux-gnu_sdk-buildroot/bin:$PATH
          scons -j2 platform=linuxbsd tests=no target=${{matrix.target}} production=${{matrix.production}} module_mono_enabled=${{ matrix.build-mono }}

      - name: Generate C# glue
        if: ${{ matrix.build-mono }}
        run: |
          ${{ matrix.bin }} --headless --generate-mono-glue ./modules/mono/glue || true

      - name: Build .NET solutions
        if: ${{ matrix.build-mono }}
        run: |
          ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --godot-platform=linuxbsd

      # Make build available
      - uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.bin}}
          path: bin/*

