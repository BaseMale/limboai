name: ðŸªŸ Windows builds
on:
  workflow_call:

  workflow_dispatch:

  push:
    branches: [ github-workflows ]


# Global Settings
env:
  GODOT_TREEISH: 4.1.1-stable
  LIMBOAI_TREEISH: master
  VERSION_STRING: 4.1.1-limboai+dev

  SCONS_CACHE_MSVC_CONFIG: true
  SCONS_CACHE_LIMIT: 4096
  SCONSFLAGS: verbose=yes warnings=extra werror=yes module_text_server_fb_enabled=yes
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  windows-builds:
    runs-on: "windows-latest"
    name: ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: Editor (64bit, release)
            target: editor
            production: yes
            arch: x86_64
            build-mono: false
            bin: godot.windows.editor.x86_64

          - name: Template (64bit, release)
            target: template_release
            production: yes
            arch: x86_64
            build-mono: false
            bin: godot.windows.template_release.x86_64

          - name: Template (64bit, debug)
            target: template_debug
            production: yes
            build-mono: false
            arch: x86_64
            bin: godot.windows.template_debug.x86_64

          # - name: Editor (32bit, release)
          #   target: editor
          #   production: yes
          #   arch: x86_32
          #   build-mono: false
          #   bin: godot.windows.editor.x86_32

          - name: Template (32bit, release)
            target: template_release
            production: yes
            arch: x86_32
            build-mono: false
            bin: godot.windows.template_release.x86_32

          - name: Template (32bit, debug)
            target: template_debug
            production: yes
            build-mono: false
            arch: x86_32
            bin: godot.windows.template_debug.x86_32

          - name: Editor .NET (64bit, release)
            target: editor
            production: yes
            arch: x86_64
            build-mono: true
            bin: godot.windows.editor.x86_64.mono

          - name: Template .NET (64bit, release)
            target: template_release
            production: yes
            arch: x86_64
            build-mono: true
            bin: godot.windows.template_release.x86_64.mono

          - name: Template .NET (64bit, debug)
            target: template_debug
            production: yes
            build-mono: true
            arch: x86_64
            bin: godot.windows.template_debug.x86_64.mono

          # - name: Editor .NET (32bit, release)
          #   target: editor
          #   production: yes
          #   arch: x86_32
          #   build-mono: true
          #   bin: godot.windows.editor.x86_32.mono

          - name: Template .NET (32bit, release)
            target: template_release
            production: yes
            arch: x86_64
            build-mono: true
            bin: godot.windows.template_release.x86_32.mono

          - name: Template .NET (32bit, debug)
            target: template_debug
            production: yes
            build-mono: true
            arch: x86_32
            bin: godot.windows.template_debug.x86_32.mono

    steps:
      # Clone Godot
      - uses: actions/checkout@v3
        with:
          repository: godotengine/godot
          ref: ${{ env.GODOT_TREEISH }}

      # Clone LimboAI module
      - uses: actions/checkout@v3
        with:
          path: modules/limboai
          ref: ${{ env.LIMBOAI_TREEISH }}

      # Use python 3.x release (works cross platform)
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: ${{ inputs.python-version }}
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: ${{ inputs.python-arch }}

      - name: Setup scons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons==4.4.0
          scons --version

      - name: Setup MSVC problem matcher
        uses: ammaraskar/msvc-problem-matcher@master

      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 platform=windows tests=no target=${{matrix.target}} arch=${{ matrix.arch }} production=${{matrix.production}} module_mono_enabled=${{ matrix.build-mono }}

      - name: Generate C# glue
        if: matrix.build-mono && matrix.target == 'editor'
        run: |
          ./bin/${{ matrix.bin }} --headless --generate-mono-glue ./modules/mono/glue || true

      - name: Build .NET solutions
        if: matrix.build-mono && matrix.target == 'editor'
        run: |
          ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --godot-platform=windows

      - name: Prepare artifact
        run: |
          Remove-Item bin/* -Include *.exp,*.lib,*.pdb -Force

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.bin }}
          path: bin/*
